name: Mainnet-Schedule

on:
  schedule:
#    - cron: '55 12 * * *' # post mainnet epoch for osmosis
#    - cron: '00 13 * * *' # post mainnet epoch for dydx
#    - cron: '05 13 * * *' # post mainnet epoch for cosmoshub
    - cron: '10 13 * * *' # post mainnet epoch for persistence
#    - cron: '15 13 * * *' # post mainnet epoch for stargaze
#    - cron: '20 13 * * *' # post mainnet epoch for agoric
#    - cron: '25 13 * * *' # post mainnet epoch for chihuahua


env:
  SMARTSTAKE_ACCESS_KEY: ${{ secrets.SMARTSTAKE_ACCESS_KEY }}
  MNEMONIC: ${{ secrets.MNEMONIC }}

jobs:
#  liquidstakeibc-osmosis-valset:
#    if: github.event.schedule == '55 12 * * *'
#    environment: prod
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#          cache-dependency-path: ./package-lock.json
#      - name: Install dependencies
#        run: npm ci
#      - name: Run get data to make weights
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "GET_DATA"
#          HOST_CHAIN: "osmosis"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "DO_TX"
#          HOST_CHAIN: "osmosis"
#
#  liquidstakeibc-dydx-valset:
#    if: github.event.schedule == '00 13 * * *'
#    environment: prod
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#          cache-dependency-path: ./package-lock.json
#      - name: Install dependencies
#        run: npm ci
#      - name: Run get data to make weights
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "GET_DATA"
#          HOST_CHAIN: "dydx"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "DO_TX"
#          HOST_CHAIN: "dydx"

#  liquidstakeibc-cosmos-valset:
#    if: github.event.schedule == '05 13 * * *'
#    environment: prod
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#          cache-dependency-path: ./package-lock.json
#      - name: Install dependencies
#        run: npm ci
#      - name: Run get data to make weights
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "GET_DATA"
#          HOST_CHAIN: "cosmos"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "DO_TX"
#          HOST_CHAIN: "cosmos"

#  liquidstakeibc-stargaze-valset:
#    if: github.event.schedule == '15 13 * * *'
#    environment: prod
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#          cache-dependency-path: ./package-lock.json
#      - name: Install dependencies
#        run: npm ci
#      - name: Run get data to make weights
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "GET_DATA"
#          HOST_CHAIN: "stargaze"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "DO_TX"
#          HOST_CHAIN: "stargaze"

#  liquidstakeibc-agoric-valset:
#    if: github.event.schedule == '20 13 * * *'
#    environment: prod
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#          cache-dependency-path: ./package-lock.json
#      - name: Install dependencies
#        run: npm ci
#      - name: Run get data to make weights
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "GET_DATA"
#          HOST_CHAIN: "agoric"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          FN: "DO_TX"
#          HOST_CHAIN: "agoric"
#
  liquidstake-persistence-valset:
    if: github.event.schedule == '10 13 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run smartstake-update-valset-weights-xprt
        env:
          FN: "GET_DATA"
          HOST_CHAIN: "persistence"
      - name: Run do txn
        run: npm run smartstake-update-valset-weights-xprt
        env:
          FN: "DO_TX"
          HOST_CHAIN: "persistence"
