name: Schedule

on:
  schedule:
    - cron: '55 12 * * *' # post mainnet epoch
    #    - cron: '00 12 * * *' # pre mainnet epoch
    - cron: '00 11 * * *' # post testnet epoch
    #    - cron: '0 10 * * *' # pre testnet epoch
    - cron: '0 */6 * * *' # every 3 hours

env:
  SMARTSTAKE_ACCESS_KEY: ${{ secrets.SMARTSTAKE_ACCESS_KEY }}

jobs:
  liquidstakeibc-cosmos-valset:
    #    if: github.event.schedule == '55 12 * * *'
    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run smartstake-update-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "cosmos"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          MNEMONIC: ${{ secrets.MNEMONIC }}
#          FN: "DO_TX"
#          HOST_CHAIN: "cosmos"

  liquidstakeibc-osmosis-valset:
    if: github.event.schedule == '55 12 * * *'
#    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run smartstake-update-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "osmosis"
      - name: Run do txn
        run: npm run smartstake-update-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "DO_TX"
          HOST_CHAIN: "osmosis"

  liquidstakeibc-dydx-valset:
    if: github.event.schedule == '55 12 * * *'
    #    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run smartstake-update-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "dydx"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights
#        env:
#          MNEMONIC: ${{ secrets.MNEMONIC }}
#          FN: "DO_TX"
#          HOST_CHAIN: "dydx"

  liquidstakeibc-persistence-valset:
    #    if: github.event.schedule == '55 12 * * *'
    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run smartstake-update-valset-weights-xprt
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "persistence"
#      - name: Run do txn
#        run: npm run smartstake-update-valset-weights-xprt
#        env:
#          MNEMONIC: ${{ secrets.MNEMONIC }}
#          FN: "DO_TX"
#          HOST_CHAIN: "persistence"

  liquidstakeibc-cosmos-testnet-valset:
#    if: github.event.schedule == '00 11 * * *'
    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run update-stkatom-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "cosmosTestnet"
      - name: Run do txn
        run: npm run update-stkatom-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "DO_TX"
          HOST_CHAIN: "cosmosTestnet"

  liquidstakeibc-osmosis-testnet-valset:
#    if: github.event.schedule == '00 11 * * *'
    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run update-stkatom-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "osmosisTestnet"
      - name: Run do txn
        run: npm run update-stkatom-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "DO_TX"
          HOST_CHAIN: "osmosisTestnet"

  liquidstakeibc-persistence-testnet-valset:
    #    if: github.event.schedule == '00 11 * * *'
    if: github.event.schedule == '0 */6 * * *'
    environment: prod
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run get data to make weights
        run: npm run update-stkxprt-valset-weights
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          FN: "GET_DATA"
          HOST_CHAIN: "persistenceTestnet"
#      - name: Run do txn
#        run: npm run update-stkxprt-valset-weights
#        env:
#          MNEMONIC: ${{ secrets.MNEMONIC }}
#          FN: "DO_TX"
#          HOST_CHAIN: "persistenceTestnet"




